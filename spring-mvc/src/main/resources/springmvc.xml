<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--基于注解实现Controller配置HandlerMapping-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>-->

    <!--基于注解实现Controller配置HandlerAdpter-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>-->

    <!--用来简化配置，写了这个就不用配置HandlerMapping和Adpter-->
    <!--默认会加载许多内置的类型转换器，如果要使用自定义的类型转换器，需要自己指定-->
    <mvc:annotation-driven conversion-service="conversionservice1">
        <!--配置消息转换器-->
        <mvc:message-converters>
            <!--jackson消息转换器-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
            <!--gson消息转换器-->
            <!--<bean class="org.springframework.http.converter.json.GsonHttpMessageConverter"/>-->
            <!--fastjson消息转换器-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json"></property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--配置Handler,由于已经在Controller上加了注解，所以只要配置扫包就行了-->
    <context:component-scan base-package="Controller"></context:component-scan>

    <!--配置ViewResolver视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--配置视图前缀-->
        <property name="prefix" value="/WEB-INF/view/"></property>
        <!--配置视图后缀-->
        <property name="suffix" value=".jsp"></property>
        <!--配置View,使用jsp视图技术渲染页面,如果默认使用jsp技术，可以省略不写下面的viewclass-->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
    </bean>
    
    <!--使用tomcat提供的默认Servlet处理静态资源,只能访问webapp下的资源，不能访问WEB-INF下的资源-->
    <!--<mvc:default-servlet-handler/>-->

    <!--使用SpringMVC的处理方式，只要匹配到img文件夹都映射到WEB-INF/img文件夹下-->
    <mvc:resources mapping="/img/**" location="/WEB-INF/img/"/>

    <!--配置访问路径跳转的页面，path是访问路径，view-name是页面-->
    <mvc:view-controller path="/userlogin" view-name="login"></mvc:view-controller>
    <mvc:view-controller path="/registview" view-name="regist"></mvc:view-controller>
    <mvc:view-controller path="/showajax" view-name="ajax"></mvc:view-controller>
    <mvc:view-controller path="/showfile" view-name="file"></mvc:view-controller>

    <!--管理自定义转换器-->
    <bean id="conversionservice1" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="converter.String2AddressConverter"/>
            </set>
        </property>
    </bean>

    <!--配置拦截器-->
    <mvc:interceptors>
        <!--默认拦截所有请求-->
        <bean class="Interceptor.HelloInterceptor"/>
        <!--拦截指定请求-->
        <mvc:interceptor>
            <!--指定拦截的请求路径-->
            <mvc:mapping path="/user/regist"/>
            <!--对/user/regist1不进行拦截-->
            <mvc:exclude-mapping path="/user/regist1"/>
            <bean class="Interceptor.TimerInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--配置文件解析器,beanid必须为multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>
</beans>